#cloud-config

users:
- name: cloudservice
  uid: 2000

write_files:
- path: /etc/get_secret.sh
  permissions: 0744
  owner: root
  content: |
    #!/usr/bin/env bash
    SA_TOKEN=`curl "http://metadata.google.internal/computeMetadata/v1/instance/service-accounts/default/token" -H "Metadata-Flavor: Google" | \
      python3 -c "import sys, json; print(json.load(sys.stdin)['access_token'])"`
    CKAN_OAUTH2_CLIENT_SECRET_SECRET_ID=`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_oauth2_client_secret_secret_id" -H "Metadata-Flavor: Google"`
    CKAN_SQLALCHEMY_URL_SECRET_ID=`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_sqlalchemy_url_secret_id" -H "Metadata-Flavor: Google"`
    PROJECT_ID=`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/project_id" -H "Metadata-Flavor: Google"`
    C_S_U=$(curl "https://secretmanager.googleapis.com/v1/projects/${PROJECT_ID}/secrets/${CKAN_SQLALCHEMY_URL_SECRET_ID}/versions/latest:access" \
      --request "GET" \
      --header "authorization: Bearer ${SA_TOKEN}" \
      --header "content-type: application/json" \
      --header "x-goog-user-project: ${PROJECT_ID}" | \
        python3 -c "import sys, json; print(json.load(sys.stdin)['payload']['data'])" | \
        base64 --decode)
    CKAN_OA_C_S=$(curl "https://secretmanager.googleapis.com/v1/projects/${PROJECT_ID}/secrets/${CKAN_OAUTH2_CLIENT_SECRET_SECRET_ID}/versions/latest:access" \
      --request "GET" \
      --header "authorization: Bearer ${SA_TOKEN}" \
      --header "content-type: application/json" \
      --header "x-goog-user-project: ${PROJECT_ID}" | \
        python3 -c "import sys, json; print(json.load(sys.stdin)['payload']['data'])" | \
        base64 --decode)
    echo "CKAN_SQLALCHEMY_URL=${C_S_U}" >> .env
    echo "CKAN_OAUTH2_CLIENT_SECRET=${CKAN_OA_C_S}" >> .env
- path: /etc/systemd/system/ckan.service
  permissions: 0644
  owner: root
  content: |
    [Unit]
    Description=Start CKAN using docker compose

    [Service]
    ExecStart=/usr/bin/docker run -v /var/run/docker.sock:/var/run/docker.sock -v "/etc/ckan:/etc/ckan" -w="/etc/ckan/contrib/docker-GCP" docker/compose:1.24.0 up
    ExecStop=/usr/bin/docker stop ckan solr redis cloudsql-proxy
    ExecStopPost=/usr/bin/docker rm ckan solr redis cloudsql-proxy

runcmd:
- cd /etc
- 'export CKAN_TAG=`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_tag" -H "Metadata-Flavor: Google"`'
- git clone https://github.com/ckan/ckan
- cd ckan
- git checkout tags/${CKAN_TAG}
- cd ..
- git clone https://github.com/vwt-digital/odh-ckan-setup /etc/ckan/odh-ckan-setup
- /usr/bin/docker run --rm -i -v /etc/ckan:/etc/ckan --entrypoint=bash gcr.io/google.com/cloudsdktool/cloud-sdk:slim /etc/ckan/odh-ckan-setup/setup_ckan.sh /etc/ckan/odh-ckan-setup /etc/ckan && exit
- /usr/bin/docker system prune -a -f
- cp ckan/contrib/docker-GCP/cloud-compute-instance/docker-compose.yml ckan/contrib/docker-GCP/
- cd ckan/contrib/docker-GCP
- mkdir ssl-certs
- cd ssl-certs
- '`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_ssl_key" -H "Metadata-Flavor: Google" --output ckan-ssl.key`'
- '`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_ssl_cert" -H "Metadata-Flavor: Google" --output ckan-ssl.crt`'
- cd ..
- python ./solr/solr_generate_pass.py "./solr/"
- 'echo "CKAN_SOLR_PASSWORD="`cat ./solr/password.txt` >> .env'
- 'echo "CKAN_SOLR_USER="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_solr_user" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_OAUTH2_AUTHORIZATION_ENDPOINT="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_oauth2_authorization_endpoint" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_OAUTH2_TOKEN_ENDPOINT="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_oauth2_token_endpoint" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_OAUTH2_CLIENT_ID="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_oauth2_client_id" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_OAUTH2_SCOPE="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_oauth2_scope" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_OAUTH2_PROFILE_API_URL="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_oauth2_profile_api_url" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_OAUTH2_PROFILE_API_USER_FIELD="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_oauth2_profile_api_user_field" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_OAUTH2_PROFILE_API_MAIL_FIELD="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_oauth2_profile_api_mail_field" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_PRIVATE_ORGS="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_private_orgs" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "SOLR_PORT="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/solr_port" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_SOLR_URL="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_solr_url" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_SITE_URL="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_url" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "CKAN_PORT="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/ckan_port" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "OAUTHLIB_INSECURE_TRANSPORT="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/oauthlib_insecure_transport" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "OAUTHLIB_RELAX_TOKEN_SCOPE="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/oauthlib_relax_token_scope" -H "Metadata-Flavor: Google"` >> .env'
- 'echo "GCP_SQL_INSTANCE="`curl "http://metadata.google.internal/computeMetadata/v1/instance/attributes/gcp_sql_instance" -H "Metadata-Flavor: Google"` >> .env'
- bash /etc/get_secret.sh
- mkdir /mnt/stateful_partition/cloudsql
- chmod 777 /mnt/stateful_partition/cloudsql
- systemctl daemon-reload
- systemctl start ckan.service
